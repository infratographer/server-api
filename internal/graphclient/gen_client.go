// Code generated by github.com/Yamashou/gqlgenc, DO NOT EDIT.

package graphclient

import (
	"context"
	"net/http"
	"time"

	"github.com/Yamashou/gqlgenc/client"
	"go.infratographer.com/x/gidx"
)

type GraphClient interface {
	GetOwnerServers(ctx context.Context, id gidx.PrefixedID, orderBy *ServerOrder, httpRequestOptions ...client.HTTPRequestOption) (*GetOwnerServers, error)
	GetServer(ctx context.Context, id gidx.PrefixedID, httpRequestOptions ...client.HTTPRequestOption) (*GetServer, error)
	ServerCreate(ctx context.Context, input CreateServerInput, httpRequestOptions ...client.HTTPRequestOption) (*ServerCreate, error)
	ServerDelete(ctx context.Context, id gidx.PrefixedID, httpRequestOptions ...client.HTTPRequestOption) (*ServerDelete, error)
	ServerUpdate(ctx context.Context, id gidx.PrefixedID, input UpdateServerInput, httpRequestOptions ...client.HTTPRequestOption) (*ServerUpdate, error)
}

type Client struct {
	Client *client.Client
}

func NewClient(cli *http.Client, baseURL string, options ...client.HTTPRequestOption) GraphClient {
	return &Client{Client: client.NewClient(cli, baseURL, options...)}
}

type Query struct {
	ServerChassis         ServerChassis         "json:\"serverChassis\" graphql:\"serverChassis\""
	ServerChassisType     ServerChassisType     "json:\"serverChassisType\" graphql:\"serverChassisType\""
	ServerComponent       ServerComponent       "json:\"serverComponent\" graphql:\"serverComponent\""
	ServerComponentType   ServerComponentType   "json:\"serverComponentType\" graphql:\"serverComponentType\""
	ServerCPU             ServerCPU             "json:\"serverCPU\" graphql:\"serverCPU\""
	ServerCPUType         ServerCPUType         "json:\"serverCPUType\" graphql:\"serverCPUType\""
	ServerHardDrive       ServerHardDrive       "json:\"serverHardDrive\" graphql:\"serverHardDrive\""
	ServerHardDriveType   ServerHardDriveType   "json:\"serverHardDriveType\" graphql:\"serverHardDriveType\""
	ServerMemory          ServerMemory          "json:\"serverMemory\" graphql:\"serverMemory\""
	ServerMemoryType      ServerMemoryType      "json:\"serverMemoryType\" graphql:\"serverMemoryType\""
	ServerMotherboard     ServerMotherboard     "json:\"serverMotherboard\" graphql:\"serverMotherboard\""
	ServerMotherboardType ServerMotherboardType "json:\"serverMotherboardType\" graphql:\"serverMotherboardType\""
	ServerNetworkCard     ServerNetworkCard     "json:\"serverNetworkCard\" graphql:\"serverNetworkCard\""
	ServerNetworkCardType ServerNetworkCardType "json:\"serverNetworkCardType\" graphql:\"serverNetworkCardType\""
	ServerNetworkPort     ServerNetworkPort     "json:\"serverNetworkPort\" graphql:\"serverNetworkPort\""
	ServerPowerSupply     ServerPowerSupply     "json:\"serverPowerSupply\" graphql:\"serverPowerSupply\""
	ServerPowerSupplyType ServerPowerSupplyType "json:\"serverPowerSupplyType\" graphql:\"serverPowerSupplyType\""
	ServerProvider        ServerProvider        "json:\"serverProvider\" graphql:\"serverProvider\""
	Server                Server                "json:\"server\" graphql:\"server\""
	ServerType            ServerType            "json:\"serverType\" graphql:\"serverType\""
	Entities              []Entity              "json:\"_entities\" graphql:\"_entities\""
	Service               Service               "json:\"_service\" graphql:\"_service\""
}
type Mutation struct {
	ServerChassis               ServerChassisCreatePayload         "json:\"serverChassis\" graphql:\"serverChassis\""
	ServerChassisUpdate         ServerChassisUpdatePayload         "json:\"serverChassisUpdate\" graphql:\"serverChassisUpdate\""
	ServerChassisDelete         ServerChassisDeletePayload         "json:\"serverChassisDelete\" graphql:\"serverChassisDelete\""
	ServerChassisType           ServerChassisTypeCreatePayload     "json:\"serverChassisType\" graphql:\"serverChassisType\""
	ServerChassisTypeUpdate     ServerChassisTypeUpdatePayload     "json:\"serverChassisTypeUpdate\" graphql:\"serverChassisTypeUpdate\""
	ServerChassisTypeDelete     ServerChassisTypeDeletePayload     "json:\"serverChassisTypeDelete\" graphql:\"serverChassisTypeDelete\""
	ServerComponentCreate       ServerComponentCreatePayload       "json:\"serverComponentCreate\" graphql:\"serverComponentCreate\""
	ServerComponentUpdate       ServerComponentUpdatePayload       "json:\"serverComponentUpdate\" graphql:\"serverComponentUpdate\""
	ServerComponentDelete       ServerComponentDeletePayload       "json:\"serverComponentDelete\" graphql:\"serverComponentDelete\""
	ServerComponentTypeCreate   ServerComponentTypeCreatePayload   "json:\"serverComponentTypeCreate\" graphql:\"serverComponentTypeCreate\""
	ServerComponentTypeUpdate   ServerComponentTypeUpdatePayload   "json:\"serverComponentTypeUpdate\" graphql:\"serverComponentTypeUpdate\""
	ServerComponentTypeDelete   ServerComponentTypeDeletePayload   "json:\"serverComponentTypeDelete\" graphql:\"serverComponentTypeDelete\""
	ServerCPU                   ServerCPUCreatePayload             "json:\"serverCPU\" graphql:\"serverCPU\""
	ServerCPUUpdate             ServerCPUUpdatePayload             "json:\"serverCPUUpdate\" graphql:\"serverCPUUpdate\""
	ServerCPUDelete             ServerCPUDeletePayload             "json:\"serverCPUDelete\" graphql:\"serverCPUDelete\""
	ServerCPUType               ServerCPUTypeCreatePayload         "json:\"serverCPUType\" graphql:\"serverCPUType\""
	ServerCPUTypeUpdate         ServerCPUTypeUpdatePayload         "json:\"serverCPUTypeUpdate\" graphql:\"serverCPUTypeUpdate\""
	ServerCPUTypeDelete         ServerCPUTypeDeletePayload         "json:\"serverCPUTypeDelete\" graphql:\"serverCPUTypeDelete\""
	ServerHardDrive             ServerHardDriveCreatePayload       "json:\"serverHardDrive\" graphql:\"serverHardDrive\""
	ServerHardDriveUpdate       ServerHardDriveUpdatePayload       "json:\"serverHardDriveUpdate\" graphql:\"serverHardDriveUpdate\""
	ServerHardDriveDelete       ServerHardDriveDeletePayload       "json:\"serverHardDriveDelete\" graphql:\"serverHardDriveDelete\""
	ServerHardDriveType         ServerHardDriveTypeCreatePayload   "json:\"serverHardDriveType\" graphql:\"serverHardDriveType\""
	ServerHardDriveTypeUpdate   ServerHardDriveTypeUpdatePayload   "json:\"serverHardDriveTypeUpdate\" graphql:\"serverHardDriveTypeUpdate\""
	ServerHardDriveTypeDelete   ServerHardDriveTypeDeletePayload   "json:\"serverHardDriveTypeDelete\" graphql:\"serverHardDriveTypeDelete\""
	ServerMemory                ServerMemoryCreatePayload          "json:\"serverMemory\" graphql:\"serverMemory\""
	ServerMemoryUpdate          ServerMemoryUpdatePayload          "json:\"serverMemoryUpdate\" graphql:\"serverMemoryUpdate\""
	ServerMemoryDelete          ServerMemoryDeletePayload          "json:\"serverMemoryDelete\" graphql:\"serverMemoryDelete\""
	ServerMemoryType            ServerMemoryTypeCreatePayload      "json:\"serverMemoryType\" graphql:\"serverMemoryType\""
	ServerMemoryTypeUpdate      ServerMemoryTypeUpdatePayload      "json:\"serverMemoryTypeUpdate\" graphql:\"serverMemoryTypeUpdate\""
	ServerMemoryTypeDelete      ServerMemoryTypeDeletePayload      "json:\"serverMemoryTypeDelete\" graphql:\"serverMemoryTypeDelete\""
	ServerMotherboard           ServerMotherboardCreatePayload     "json:\"serverMotherboard\" graphql:\"serverMotherboard\""
	ServerMotherboardUpdate     ServerMotherboardUpdatePayload     "json:\"serverMotherboardUpdate\" graphql:\"serverMotherboardUpdate\""
	ServerMotherboardDelete     ServerMotherboardDeletePayload     "json:\"serverMotherboardDelete\" graphql:\"serverMotherboardDelete\""
	ServerMotherboardType       ServerMotherboardTypeCreatePayload "json:\"serverMotherboardType\" graphql:\"serverMotherboardType\""
	ServerMotherboardTypeUpdate ServerMotherboardTypeUpdatePayload "json:\"serverMotherboardTypeUpdate\" graphql:\"serverMotherboardTypeUpdate\""
	ServerMotherboardTypeDelete ServerMotherboardTypeDeletePayload "json:\"serverMotherboardTypeDelete\" graphql:\"serverMotherboardTypeDelete\""
	ServerNetworkCard           ServerNetworkCardCreatePayload     "json:\"serverNetworkCard\" graphql:\"serverNetworkCard\""
	ServerNetworkCardUpdate     ServerNetworkCardUpdatePayload     "json:\"serverNetworkCardUpdate\" graphql:\"serverNetworkCardUpdate\""
	ServerNetworkCardDelete     ServerNetworkCardDeletePayload     "json:\"serverNetworkCardDelete\" graphql:\"serverNetworkCardDelete\""
	ServerNetworkCardType       ServerNetworkCardTypeCreatePayload "json:\"serverNetworkCardType\" graphql:\"serverNetworkCardType\""
	ServerNetworkCardTypeUpdate ServerNetworkCardTypeUpdatePayload "json:\"serverNetworkCardTypeUpdate\" graphql:\"serverNetworkCardTypeUpdate\""
	ServerNetworkCardTypeDelete ServerNetworkCardTypeDeletePayload "json:\"serverNetworkCardTypeDelete\" graphql:\"serverNetworkCardTypeDelete\""
	ServerNetworkPort           ServerNetworkPortCreatePayload     "json:\"serverNetworkPort\" graphql:\"serverNetworkPort\""
	ServerNetworkPortUpdate     ServerNetworkPortUpdatePayload     "json:\"serverNetworkPortUpdate\" graphql:\"serverNetworkPortUpdate\""
	ServerNetworkPortDelete     ServerNetworkPortDeletePayload     "json:\"serverNetworkPortDelete\" graphql:\"serverNetworkPortDelete\""
	ServerPowerSupply           ServerPowerSupplyCreatePayload     "json:\"serverPowerSupply\" graphql:\"serverPowerSupply\""
	ServerPowerSupplyUpdate     ServerPowerSupplyUpdatePayload     "json:\"serverPowerSupplyUpdate\" graphql:\"serverPowerSupplyUpdate\""
	ServerPowerSupplyDelete     ServerPowerSupplyDeletePayload     "json:\"serverPowerSupplyDelete\" graphql:\"serverPowerSupplyDelete\""
	ServerPowerSupplyType       ServerPowerSupplyTypeCreatePayload "json:\"serverPowerSupplyType\" graphql:\"serverPowerSupplyType\""
	ServerPowerSupplyTypeUpdate ServerPowerSupplyTypeUpdatePayload "json:\"serverPowerSupplyTypeUpdate\" graphql:\"serverPowerSupplyTypeUpdate\""
	ServerPowerSupplyTypeDelete ServerPowerSupplyTypeDeletePayload "json:\"serverPowerSupplyTypeDelete\" graphql:\"serverPowerSupplyTypeDelete\""
	ServerProviderCreate        ServerProviderCreatePayload        "json:\"serverProviderCreate\" graphql:\"serverProviderCreate\""
	ServerProviderUpdate        ServerProviderUpdatePayload        "json:\"serverProviderUpdate\" graphql:\"serverProviderUpdate\""
	ServerProviderDelete        ServerProviderDeletePayload        "json:\"serverProviderDelete\" graphql:\"serverProviderDelete\""
	ServerCreate                ServerCreatePayload                "json:\"serverCreate\" graphql:\"serverCreate\""
	ServerUpdate                ServerUpdatePayload                "json:\"serverUpdate\" graphql:\"serverUpdate\""
	ServerDelete                ServerDeletePayload                "json:\"serverDelete\" graphql:\"serverDelete\""
	ServerTypeCreate            ServerTypeCreatePayload            "json:\"serverTypeCreate\" graphql:\"serverTypeCreate\""
	ServerTypeUpdate            ServerTypeUpdatePayload            "json:\"serverTypeUpdate\" graphql:\"serverTypeUpdate\""
	ServerTypeDelete            ServerTypeDeletePayload            "json:\"serverTypeDelete\" graphql:\"serverTypeDelete\""
}
type GetOwnerServers struct {
	Entities []*struct {
		Servers struct {
			Edges []*struct {
				Node *struct {
					ID   gidx.PrefixedID "json:\"id\" graphql:\"id\""
					Name string          "json:\"name\" graphql:\"name\""
				} "json:\"node\" graphql:\"node\""
			} "json:\"edges\" graphql:\"edges\""
		} "json:\"servers\" graphql:\"servers\""
	} "json:\"_entities\" graphql:\"_entities\""
}
type GetServer struct {
	Server struct {
		ID          gidx.PrefixedID "json:\"id\" graphql:\"id\""
		Name        string          "json:\"name\" graphql:\"name\""
		Description *string         "json:\"description\" graphql:\"description\""
		Owner       struct {
			ID gidx.PrefixedID "json:\"id\" graphql:\"id\""
		} "json:\"owner\" graphql:\"owner\""
		Location struct {
			ID gidx.PrefixedID "json:\"id\" graphql:\"id\""
		} "json:\"location\" graphql:\"location\""
		ServerProvider struct {
			ID gidx.PrefixedID "json:\"id\" graphql:\"id\""
		} "json:\"serverProvider\" graphql:\"serverProvider\""
		CreatedAt time.Time "json:\"createdAt\" graphql:\"createdAt\""
		UpdatedAt time.Time "json:\"updatedAt\" graphql:\"updatedAt\""
	} "json:\"server\" graphql:\"server\""
}
type ServerCreate struct {
	ServerCreate struct {
		Server struct {
			ID             gidx.PrefixedID "json:\"id\" graphql:\"id\""
			Name           string          "json:\"name\" graphql:\"name\""
			ServerProvider struct {
				ID gidx.PrefixedID "json:\"id\" graphql:\"id\""
			} "json:\"serverProvider\" graphql:\"serverProvider\""
			Owner struct {
				ID gidx.PrefixedID "json:\"id\" graphql:\"id\""
			} "json:\"owner\" graphql:\"owner\""
			Location struct {
				ID gidx.PrefixedID "json:\"id\" graphql:\"id\""
			} "json:\"location\" graphql:\"location\""
			CreatedAt time.Time "json:\"createdAt\" graphql:\"createdAt\""
			UpdatedAt time.Time "json:\"updatedAt\" graphql:\"updatedAt\""
		} "json:\"server\" graphql:\"server\""
	} "json:\"serverCreate\" graphql:\"serverCreate\""
}
type ServerDelete struct {
	ServerDelete struct {
		DeletedID gidx.PrefixedID "json:\"deletedID\" graphql:\"deletedID\""
	} "json:\"serverDelete\" graphql:\"serverDelete\""
}
type ServerUpdate struct {
	ServerUpdate struct {
		Server struct {
			ID        gidx.PrefixedID "json:\"id\" graphql:\"id\""
			Name      string          "json:\"name\" graphql:\"name\""
			CreatedAt time.Time       "json:\"createdAt\" graphql:\"createdAt\""
			UpdatedAt time.Time       "json:\"updatedAt\" graphql:\"updatedAt\""
		} "json:\"server\" graphql:\"server\""
	} "json:\"serverUpdate\" graphql:\"serverUpdate\""
}

const GetOwnerServersDocument = `query GetOwnerServers ($id: ID!, $orderBy: ServerOrder) {
	_entities(representations: {__typename:"ResourceOwner",id:$id}) {
		... on ResourceOwner {
			servers(orderBy: $orderBy) {
				edges {
					node {
						id
						name
					}
				}
			}
		}
	}
}
`

func (c *Client) GetOwnerServers(ctx context.Context, id gidx.PrefixedID, orderBy *ServerOrder, httpRequestOptions ...client.HTTPRequestOption) (*GetOwnerServers, error) {
	vars := map[string]interface{}{
		"id":      id,
		"orderBy": orderBy,
	}

	var res GetOwnerServers
	if err := c.Client.Post(ctx, "GetOwnerServers", GetOwnerServersDocument, &res, vars, httpRequestOptions...); err != nil {
		return nil, err
	}

	return &res, nil
}

const GetServerDocument = `query GetServer ($id: ID!) {
	server(id: $id) {
		id
		name
		description
		owner {
			id
		}
		location {
			id
		}
		serverProvider {
			id
		}
		createdAt
		updatedAt
	}
}
`

func (c *Client) GetServer(ctx context.Context, id gidx.PrefixedID, httpRequestOptions ...client.HTTPRequestOption) (*GetServer, error) {
	vars := map[string]interface{}{
		"id": id,
	}

	var res GetServer
	if err := c.Client.Post(ctx, "GetServer", GetServerDocument, &res, vars, httpRequestOptions...); err != nil {
		return nil, err
	}

	return &res, nil
}

const ServerCreateDocument = `mutation ServerCreate ($input: CreateServerInput!) {
	serverCreate(input: $input) {
		server {
			id
			name
			serverProvider {
				id
			}
			owner {
				id
			}
			location {
				id
			}
			createdAt
			updatedAt
		}
	}
}
`

func (c *Client) ServerCreate(ctx context.Context, input CreateServerInput, httpRequestOptions ...client.HTTPRequestOption) (*ServerCreate, error) {
	vars := map[string]interface{}{
		"input": input,
	}

	var res ServerCreate
	if err := c.Client.Post(ctx, "ServerCreate", ServerCreateDocument, &res, vars, httpRequestOptions...); err != nil {
		return nil, err
	}

	return &res, nil
}

const ServerDeleteDocument = `mutation ServerDelete ($id: ID!) {
	serverDelete(id: $id) {
		deletedID
	}
}
`

func (c *Client) ServerDelete(ctx context.Context, id gidx.PrefixedID, httpRequestOptions ...client.HTTPRequestOption) (*ServerDelete, error) {
	vars := map[string]interface{}{
		"id": id,
	}

	var res ServerDelete
	if err := c.Client.Post(ctx, "ServerDelete", ServerDeleteDocument, &res, vars, httpRequestOptions...); err != nil {
		return nil, err
	}

	return &res, nil
}

const ServerUpdateDocument = `mutation ServerUpdate ($id: ID!, $input: UpdateServerInput!) {
	serverUpdate(id: $id, input: $input) {
		server {
			id
			name
			createdAt
			updatedAt
		}
	}
}
`

func (c *Client) ServerUpdate(ctx context.Context, id gidx.PrefixedID, input UpdateServerInput, httpRequestOptions ...client.HTTPRequestOption) (*ServerUpdate, error) {
	vars := map[string]interface{}{
		"id":    id,
		"input": input,
	}

	var res ServerUpdate
	if err := c.Client.Post(ctx, "ServerUpdate", ServerUpdateDocument, &res, vars, httpRequestOptions...); err != nil {
		return nil, err
	}

	return &res, nil
}
