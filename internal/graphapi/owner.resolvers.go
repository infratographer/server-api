package graphapi

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"

	"entgo.io/contrib/entgql"
	"go.infratographer.com/server-api/internal/ent/generated"
	"go.infratographer.com/server-api/internal/ent/generated/server"
	"go.infratographer.com/x/gidx"
)

// Servers is the resolver for the servers field.
func (r *resourceOwnerResolver) Servers(ctx context.Context, obj *ResourceOwner, after *entgql.Cursor[gidx.PrefixedID], first *int, before *entgql.Cursor[gidx.PrefixedID], last *int, orderBy *generated.ServerOrder, where *generated.ServerWhereInput) (*generated.ServerConnection, error) {
	return r.client.Server.Query().Where(server.OwnerID(obj.ID)).Paginate(ctx, after, first, before, last, generated.WithServerOrder(orderBy), generated.WithServerFilter(where.Filter))
}

// Owner is the resolver for the owner field.
func (r *serverResolver) Owner(ctx context.Context, obj *generated.Server) (*ResourceOwner, error) {
	return &ResourceOwner{ID: obj.OwnerID}, nil
}

// ResourceOwner returns ResourceOwnerResolver implementation.
func (r *Resolver) ResourceOwner() ResourceOwnerResolver { return &resourceOwnerResolver{r} }

type resourceOwnerResolver struct{ *Resolver }
