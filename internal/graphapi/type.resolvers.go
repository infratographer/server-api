package graphapi

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.34

import (
	"context"
	"fmt"

	"go.infratographer.com/server-api/internal/ent/generated"
	"go.infratographer.com/x/gidx"
)

// ServerTypeCreate is the resolver for the serverTypeCreate field.
func (r *mutationResolver) ServerTypeCreate(ctx context.Context, input generated.CreateServerTypeInput) (*ServerTypeCreatePayload, error) {
	typ, err := r.client.ServerType.Create().SetInput(input).Save(ctx)
	if err != nil {
		return nil, err
	}

	return &ServerTypeCreatePayload{ServerType: typ}, nil
}

// ServerTypeUpdate is the resolver for the serverTypeUpdate field.
func (r *mutationResolver) ServerTypeUpdate(ctx context.Context, id gidx.PrefixedID, input generated.UpdateServerTypeInput) (*ServerTypeUpdatePayload, error) {
	panic(fmt.Errorf("not implemented: ServerTypeUpdate - serverTypeUpdate"))
}

// ServerTypeDelete is the resolver for the serverTypeDelete field.
func (r *mutationResolver) ServerTypeDelete(ctx context.Context, id gidx.PrefixedID) (*ServerTypeDeletePayload, error) {
	panic(fmt.Errorf("not implemented: ServerTypeDelete - serverTypeDelete"))
}

// ServerType is the resolver for the serverType field.
func (r *queryResolver) ServerType(ctx context.Context, id gidx.PrefixedID) (*generated.ServerType, error) {
	panic(fmt.Errorf("not implemented: ServerType - serverType"))
}
