package graphapi

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.34

import (
	"context"
	"fmt"

	"go.infratographer.com/server-api/internal/ent/generated"
	"go.infratographer.com/x/gidx"
)

// ServerChassis is the resolver for the serverChassis field.
func (r *mutationResolver) ServerChassis(ctx context.Context, input generated.CreateServerChassisInput) (*ServerChassisCreatePayload, error) {
	panic(fmt.Errorf("not implemented: ServerChassis - serverChassis"))
}

// ServerChassisUpdate is the resolver for the serverChassisUpdate field.
func (r *mutationResolver) ServerChassisUpdate(ctx context.Context, id gidx.PrefixedID, input generated.UpdateServerChassisInput) (*ServerChassisUpdatePayload, error) {
	panic(fmt.Errorf("not implemented: ServerChassisUpdate - serverChassisUpdate"))
}

// ServerChassisDelete is the resolver for the serverChassisDelete field.
func (r *mutationResolver) ServerChassisDelete(ctx context.Context, id gidx.PrefixedID) (*ServerChassisDeletePayload, error) {
	panic(fmt.Errorf("not implemented: ServerChassisDelete - serverChassisDelete"))
}

// ServerChassis is the resolver for the serverChassis field.
func (r *queryResolver) ServerChassis(ctx context.Context, id gidx.PrefixedID) (*generated.ServerChassis, error) {
	panic(fmt.Errorf("not implemented: ServerChassis - serverChassis"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
