package graphapi

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.34

import (
	"context"
	"fmt"

	"go.infratographer.com/server-api/internal/ent/generated"
	"go.infratographer.com/x/gidx"
)

// ServerProviderCreate is the resolver for the serverProviderCreate field.
func (r *mutationResolver) ServerProviderCreate(ctx context.Context, input generated.CreateServerProviderInput) (*ServerProviderCreatePayload, error) {
	prv, err := r.client.Provider.Create().SetInput(input).Save(ctx)
	if err != nil {
		return nil, err
	}

	return &ServerProviderCreatePayload{ServerProvider: prv}, nil
}

// ServerProviderUpdate is the resolver for the serverProviderUpdate field.
func (r *mutationResolver) ServerProviderUpdate(ctx context.Context, id gidx.PrefixedID, input generated.UpdateServerProviderInput) (*ServerProviderUpdatePayload, error) {
	panic(fmt.Errorf("not implemented: ServerProviderUpdate - serverProviderUpdate"))
}

// ServerProviderDelete is the resolver for the serverProviderDelete field.
func (r *mutationResolver) ServerProviderDelete(ctx context.Context, id gidx.PrefixedID) (*ServerProviderDeletePayload, error) {
	panic(fmt.Errorf("not implemented: ServerProviderDelete - serverProviderDelete"))
}

// ServerProvider is the resolver for the serverProvider field.
func (r *queryResolver) ServerProvider(ctx context.Context, id gidx.PrefixedID) (*generated.Provider, error) {
	panic(fmt.Errorf("not implemented: ServerProvider - serverProvider"))
}
