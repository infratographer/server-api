package graphapi

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.34

import (
	"context"
	"fmt"

	"go.infratographer.com/server-api/internal/ent/generated"
	"go.infratographer.com/x/gidx"
)

// ServerComponentTypeCreate is the resolver for the serverComponentTypeCreate field.
func (r *mutationResolver) ServerComponentTypeCreate(ctx context.Context, input generated.CreateServerComponentTypeInput) (*ServerComponentTypeCreatePayload, error) {
	panic(fmt.Errorf("not implemented: ServerComponentTypeCreate - serverComponentTypeCreate"))
}

// ServerComponentTypeUpdate is the resolver for the serverComponentTypeUpdate field.
func (r *mutationResolver) ServerComponentTypeUpdate(ctx context.Context, id gidx.PrefixedID, input generated.UpdateServerComponentTypeInput) (*ServerComponentTypeUpdatePayload, error) {
	panic(fmt.Errorf("not implemented: ServerComponentTypeUpdate - serverComponentTypeUpdate"))
}

// ServerComponentTypeDelete is the resolver for the serverComponentTypeDelete field.
func (r *mutationResolver) ServerComponentTypeDelete(ctx context.Context, id gidx.PrefixedID) (*ServerComponentTypeDeletePayload, error) {
	panic(fmt.Errorf("not implemented: ServerComponentTypeDelete - serverComponentTypeDelete"))
}

// ServerComponentType is the resolver for the serverComponentType field.
func (r *queryResolver) ServerComponentType(ctx context.Context, id gidx.PrefixedID) (*generated.ServerComponentType, error) {
	panic(fmt.Errorf("not implemented: ServerComponentType - serverComponentType"))
}
