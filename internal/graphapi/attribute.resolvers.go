package graphapi

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.34

import (
	"context"
	"fmt"

	"go.infratographer.com/server-api/internal/ent/generated"
	"go.infratographer.com/x/gidx"
)

// ServerAttributeCreate is the resolver for the serverAttributeCreate field.
func (r *mutationResolver) ServerAttributeCreate(ctx context.Context, input generated.CreateServerAttributeInput) (*ServerAttributeCreatePayload, error) {
	panic(fmt.Errorf("not implemented: ServerAttributeCreate - serverAttributeCreate"))
}

// ServerAttributeUpdate is the resolver for the serverAttributeUpdate field.
func (r *mutationResolver) ServerAttributeUpdate(ctx context.Context, id gidx.PrefixedID, input generated.UpdateServerAttributeInput) (*ServerAttributeUpdatePayload, error) {
	panic(fmt.Errorf("not implemented: ServerAttributeUpdate - serverAttributeUpdate"))
}

// ServerAttributeDelete is the resolver for the serverAttributeDelete field.
func (r *mutationResolver) ServerAttributeDelete(ctx context.Context, id gidx.PrefixedID) (*ServerAttributeDeletePayload, error) {
	panic(fmt.Errorf("not implemented: ServerAttributeDelete - serverAttributeDelete"))
}

// ServerAttribute is the resolver for the serverAttribute field.
func (r *queryResolver) ServerAttribute(ctx context.Context, id gidx.PrefixedID) (*generated.ServerAttribute, error) {
	panic(fmt.Errorf("not implemented: ServerAttribute - serverAttribute"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
